{
    "contents" : "#' Plot multiple ggplot2s in one page.\n#'\n#' Stolen shamelessly from http://www.cookbook-r.com/Graphs/Multiple_graphs_on_one_page_(ggplot2)/\n#'\n#' @param ... plot objects for plotting.\n#' @param plotlist alternative input of plots, as list.\n#' @param cols number of columns in viewing window.\n#' @param layout layout matrix for plots.\n#' @examples\n#'\n#' rm(list=ls())\n#'\n#'library(ggplot2)\n#'library(hunterr)\n#'\n#'# This example uses the ChickWeight dataset, which comes with ggplot2\n#'# First plot\n#'p1 <- ggplot(ChickWeight, aes(x=Time, y=weight, colour=Diet, group=Chick)) +\n#'  geom_line() +\n#'  ggtitle(\"Growth curve for individual chicks\")\n#'\n#'# Second plot\n#'p2 <- ggplot(ChickWeight, aes(x=Time, y=weight, colour=Diet)) +\n#'  geom_point(alpha=.3) +\n#'  geom_smooth(alpha=.2, size=1) +\n#'  ggtitle(\"Fitted growth curve per diet\")\n#'\n#'# Third plot\n#'p3 <- ggplot(subset(ChickWeight, Time==21), aes(x=weight, colour=Diet)) +\n#'  geom_density() +\n#'  ggtitle(\"Final weight, by diet\")\n#'\n#'# Fourth plot\n#'p4 <- ggplot(subset(ChickWeight, Time==21), aes(x=weight, fill=Diet)) +\n#'  geom_histogram(colour=\"black\", binwidth=50) +\n#'  facet_grid(Diet ~ .) +\n#'  ggtitle(\"Final weight, by diet\") +\n#'  theme(legend.position=\"none\")        # No legend (redundant in this graph)\n#'\n#'multiplot(p1, p2, p3, p4, cols=2)\n#'multiplot(p1, p2, p3, p4, layout_mat = matrix(c(1,2,3,4,4,4), nrow=2, byrow=TRUE))\n#'\n#' @export\n\nmultiplot <- function(..., plotlist=NULL, cols=1, layout=NULL) {\n\n  # Make a list from the ... arguments and plotlist\n  plots <- c(list(...), plotlist)\n\n  numPlots = length(plots)\n\n  # If layout is NULL, then use 'cols' to determine layout\n  if (is.null(layout)) {\n    # Make the panel\n    # ncol: Number of columns of plots\n    # nrow: Number of rows needed, calculated from # of cols\n    layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),\n                     ncol = cols, nrow = ceiling(numPlots/cols))\n  }\n\n  if (numPlots==1) {\n    print(plots[[1]])\n\n  } else {\n    # Set up the page\n    grid::grid.newpage()\n    grid::pushViewport(grid::viewport(layout = grid::grid.layout(nrow(layout), ncol(layout))))\n\n    # Make each plot, in the correct location\n    for (i in 1:numPlots) {\n      # Get the i,j matrix positions of the regions that contain this subplot\n      matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))\n\n      print(plots[[i]], vp = grid::viewport(layout.pos.row = matchidx$row,\n                                            layout.pos.col = matchidx$col))\n    }\n  }\n}\n",
    "created" : 1446758974814.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4011792589",
    "id" : "4404668A",
    "lastKnownWriteTime" : 1446824681,
    "path" : "C:/Users/Hunter/Dropbox/My_R_Packages/hunterr/R/MultiPlot.R",
    "project_path" : "R/MultiPlot.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_source"
}